// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison

// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the SupaDart configuration.

// SDK
import 'package:supabase_flutter/supabase_flutter.dart';

// No Intl package needed
// No Dart Convert needed
// Supadart Class
abstract class SupadartClass<T> {
  static Map<String, dynamic> insert(Map<String, dynamic> data) {
    throw UnimplementedError();
  }

  static Map<String, dynamic> update(Map<String, dynamic> data) {
    throw UnimplementedError();
  }

  factory SupadartClass.fromJson(Map<String, dynamic> json) {
    throw UnimplementedError();
  }

  static converter(List<Map<String, dynamic>> data) {
    throw UnimplementedError();
  }

  static converterSingle(Map<String, dynamic> data) {
    throw UnimplementedError();
  }
}

// Supabase Client Extension
extension SupadartClient on SupabaseClient {
  SupabaseQueryBuilder get recipe => from('recipe');
  SupabaseQueryBuilder get users => from('users');
}

// Supabase Storage Client Extension
extension SupadartStorageClient on SupabaseStorageClient {}

// Enums

// Utils
extension DurationFromString on Duration {
  static Duration fromString(String str) {
    final parts = str.split(':');
    final hours = int.parse(parts[0]);
    final minutes = int.parse(parts[1]);
    final secondsAndMilliseconds = parts[2].split('.');
    final seconds = int.parse(secondsAndMilliseconds[0]);
    final milliseconds = secondsAndMilliseconds.length > 1
        ? int.parse(secondsAndMilliseconds[1])
        : 0;

    return Duration(
      hours: hours,
      minutes: minutes,
      seconds: seconds,
      milliseconds: milliseconds,
    );
  }
}

class Recipe implements SupadartClass<Recipe> {
  final String id;
  final String userId;
  final String name;
  final String description;
  final int? totalDuration;
  final int? energy;
  final int? protein;
  final int? carbs;
  final int? fat;
  final int servings;
  final String difficulty;
  final Map<String, dynamic> ingredients;
  final Map<String, dynamic> steps;
  final String titlePhoto;
  final String? videoInstruction;

  const Recipe({
    required this.id,
    required this.userId,
    required this.name,
    required this.description,
    this.totalDuration,
    this.energy,
    this.protein,
    this.carbs,
    this.fat,
    required this.servings,
    required this.difficulty,
    required this.ingredients,
    required this.steps,
    required this.titlePhoto,
    this.videoInstruction,
  });

  static String get table_name => 'recipe';
  static String get c_id => 'id';
  static String get c_userId => 'user_id';
  static String get c_name => 'name';
  static String get c_description => 'description';
  static String get c_totalDuration => 'total_duration';
  static String get c_energy => 'energy';
  static String get c_protein => 'protein';
  static String get c_carbs => 'carbs';
  static String get c_fat => 'fat';
  static String get c_servings => 'servings';
  static String get c_difficulty => 'difficulty';
  static String get c_ingredients => 'ingredients';
  static String get c_steps => 'steps';
  static String get c_titlePhoto => 'title_photo';
  static String get c_videoInstruction => 'video_instruction';

  static List<Recipe> converter(List<Map<String, dynamic>> data) {
    return data.map(Recipe.fromJson).toList();
  }

  static Recipe converterSingle(Map<String, dynamic> data) {
    return Recipe.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    String? userId,
    String? name,
    String? description,
    int? totalDuration,
    int? energy,
    int? protein,
    int? carbs,
    int? fat,
    int? servings,
    String? difficulty,
    Map<String, dynamic>? ingredients,
    Map<String, dynamic>? steps,
    String? titlePhoto,
    String? videoInstruction,
  }) {
    return {
      if (id != null) 'id': id,
      if (userId != null) 'user_id': userId,
      if (name != null) 'name': name,
      if (description != null) 'description': description,
      if (totalDuration != null) 'total_duration': totalDuration,
      if (energy != null) 'energy': energy,
      if (protein != null) 'protein': protein,
      if (carbs != null) 'carbs': carbs,
      if (fat != null) 'fat': fat,
      if (servings != null) 'servings': servings,
      if (difficulty != null) 'difficulty': difficulty,
      if (ingredients != null) 'ingredients': ingredients,
      if (steps != null) 'steps': steps,
      if (titlePhoto != null) 'title_photo': titlePhoto,
      if (videoInstruction != null) 'video_instruction': videoInstruction,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    required String userId,
    required String name,
    required String description,
    int? totalDuration,
    int? energy,
    int? protein,
    int? carbs,
    int? fat,
    required int servings,
    required String difficulty,
    required Map<String, dynamic> ingredients,
    required Map<String, dynamic> steps,
    required String titlePhoto,
    String? videoInstruction,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      name: name,
      description: description,
      totalDuration: totalDuration,
      energy: energy,
      protein: protein,
      carbs: carbs,
      fat: fat,
      servings: servings,
      difficulty: difficulty,
      ingredients: ingredients,
      steps: steps,
      titlePhoto: titlePhoto,
      videoInstruction: videoInstruction,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    String? userId,
    String? name,
    String? description,
    int? totalDuration,
    int? energy,
    int? protein,
    int? carbs,
    int? fat,
    int? servings,
    String? difficulty,
    Map<String, dynamic>? ingredients,
    Map<String, dynamic>? steps,
    String? titlePhoto,
    String? videoInstruction,
  }) {
    return _generateMap(
      id: id,
      userId: userId,
      name: name,
      description: description,
      totalDuration: totalDuration,
      energy: energy,
      protein: protein,
      carbs: carbs,
      fat: fat,
      servings: servings,
      difficulty: difficulty,
      ingredients: ingredients,
      steps: steps,
      titlePhoto: titlePhoto,
      videoInstruction: videoInstruction,
    );
  }

  factory Recipe.fromJson(Map<String, dynamic> jsonn) {
    return Recipe(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      userId: jsonn['user_id'] != null ? jsonn['user_id'].toString() : '',
      name: jsonn['name'] != null ? jsonn['name'].toString() : '',
      description:
          jsonn['description'] != null ? jsonn['description'].toString() : '',
      totalDuration: jsonn['total_duration'] != null
          ? int.parse(jsonn['total_duration'].toString())
          : 0,
      energy:
          jsonn['energy'] != null ? int.parse(jsonn['energy'].toString()) : 0,
      protein:
          jsonn['protein'] != null ? int.parse(jsonn['protein'].toString()) : 0,
      carbs: jsonn['carbs'] != null ? int.parse(jsonn['carbs'].toString()) : 0,
      fat: jsonn['fat'] != null ? int.parse(jsonn['fat'].toString()) : 0,
      servings: jsonn['servings'] != null
          ? int.parse(jsonn['servings'].toString())
          : 0,
      difficulty:
          jsonn['difficulty'] != null ? jsonn['difficulty'].toString() : '',
      ingredients: jsonn['ingredients'] != null
          ? jsonn['ingredients'] as Map<String, dynamic>
          : <String, dynamic>{},
      steps: jsonn['steps'] != null
          ? jsonn['steps'] as Map<String, dynamic>
          : <String, dynamic>{},
      titlePhoto:
          jsonn['title_photo'] != null ? jsonn['title_photo'].toString() : '',
      videoInstruction: jsonn['video_instruction'] != null
          ? jsonn['video_instruction'].toString()
          : '',
    );
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      userId: userId,
      name: name,
      description: description,
      totalDuration: totalDuration,
      energy: energy,
      protein: protein,
      carbs: carbs,
      fat: fat,
      servings: servings,
      difficulty: difficulty,
      ingredients: ingredients,
      steps: steps,
      titlePhoto: titlePhoto,
      videoInstruction: videoInstruction,
    );
  }
}

class Users implements SupadartClass<Users> {
  final String id;
  final DateTime createdAt;
  final String? name;

  const Users({
    required this.id,
    required this.createdAt,
    this.name,
  });

  static String get table_name => 'users';
  static String get c_id => 'id';
  static String get c_createdAt => 'created_at';
  static String get c_name => 'name';

  static List<Users> converter(List<Map<String, dynamic>> data) {
    return data.map(Users.fromJson).toList();
  }

  static Users converterSingle(Map<String, dynamic> data) {
    return Users.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    DateTime? createdAt,
    String? name,
  }) {
    return {
      if (id != null) 'id': id,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (name != null) 'name': name,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    DateTime? createdAt,
    String? name,
  }) {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      name: name,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    DateTime? createdAt,
    String? name,
  }) {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      name: name,
    );
  }

  factory Users.fromJson(Map<String, dynamic> jsonn) {
    return Users(
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      name: jsonn['name'] != null ? jsonn['name'].toString() : '',
    );
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      name: name,
    );
  }
}
